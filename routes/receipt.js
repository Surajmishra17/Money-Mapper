const express = require('express');
const router = express.Router();
const Receipt = require('../models/receipt');
const PDFDocument = require('pdfkit');
const isLoggedIn = require('../middleware/isLoggedIn'); // Import the middleware

// Add a new receipt
router.post('/add', isLoggedIn, async (req, res) => {
    try {
        const newReceipt = new Receipt({
            ...req.body,
            user: req.user._id // Associate the receipt with the logged-in user
        });
        const savedReceipt = await newReceipt.save();
        res.json(savedReceipt);
    } catch (err) {
        console.error(err);
        res.status(500).json({ message: 'Error saving receipt' });
    }
});

// Get all receipts for the logged-in user
router.get('/all', isLoggedIn, async (req, res) => {
    try {
        const receipts = await Receipt.find({ user: req.user._id }).sort({ date: -1 });
        res.json(receipts);
    } catch (err) {
        console.error(err);
        res.status(500).json({ message: 'Error fetching receipts' });
    }
});

// Download receipt as PDF
router.get('/download/:id', isLoggedIn, async (req, res) => {
    try {
        const receipt = await Receipt.findOne({ _id: req.params.id, user: req.user._id });
        if (!receipt) return res.status(404).send('Receipt not found or you do not have permission.');

        res.setHeader('Content-Disposition', `attachment; filename=receipt-${receipt._id}.pdf`);
        res.setHeader('Content-Type', 'application/pdf');

        const doc = new PDFDocument();
        doc.pipe(res);
        doc.fontSize(20).text('RENT RECEIPT', { align: 'center' });
        doc.moveDown();
        doc.fontSize(14).text(`Tenant Name: ${receipt.tenantName}`);
        doc.text(`Property Type: ${receipt.propertyType}`);
        doc.text(`Monthly Rent: ₹${receipt.monthlyRent}`);
        doc.text(`Electricity: ₹${receipt.electricityRate} x ${receipt.electricityUnits}`);
        doc.text(`Water Usage: ₹${receipt.waterUsage}`);
        doc.moveDown();
        doc.fontSize(16).text(`TOTAL: ₹${receipt.totalAmount}`, { align: 'right' });
        doc.moveDown();
        doc.fontSize(10).text(`Date: ${receipt.date.toLocaleDateString()}`);
        doc.text('Generated by Money Mapper', { align: 'center' });
        doc.end();
    } catch (err) {
        console.error(err);
        res.status(500).send('Error generating PDF');
    }
});

module.exports = router;
